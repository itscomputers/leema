func foo(x): Str ->
    if x == 4 ->
        fail(#xis4, "tacos are delicious")
    --
    "not 4"
--

func handle_nonlinear(x: Int, prop: Bool): Str ->
   let c := foo(x)
   "str interp: $c"
   if
   |c == "tacos" ->
      let d := bar(x)
      cout("tacos are: $d")
   |else ->
      let d := bar(x+1)
      cout("burritos are: $d")
   --

   failed c
   |(#xis4, f) ->
      if
      |prop ->
         cout("c failed. log and propagate\n")
         refail(c)
      |else ->
         cout("c failed. no propagate.\n")
         unfail("whoa - not linear!")
      --
   |_ ->
      cout("no match on failure hashtag\n")
      refail(c)
   --

   failed d
   |#xis4 ->
      cout("handle d the same no matter what")
      "whatever"
   --
--

func main() ->
   let d := handle_nonlinear(4, false)
   cout("d: $d\n")
--
